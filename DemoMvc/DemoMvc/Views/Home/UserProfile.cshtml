@model DemoMvc.Models.tbl_User

@{
    ViewBag.Title = "UserProfile";
}
<link href="~/Content/style/profile.css" rel="stylesheet" />
@*enctype="multipart/form-data ----for posting file need to add this"*@
@using (Html.BeginForm("UserProfile", "Home", FormMethod.Post, new { @class = "form-horizontal", enctype="multipart/form-data" }))
{
    <div id="profileFormLayout">
        <div class="row">
            <div class="col-md-4">
                 <div class="user-profile-image">
                        <input type="file" class="hidden" id="BrowseImage" name="UserImageFile" accept="image/png, image/jpg, image/jpeg" />
                        <img src="@Url.Content(Model.ImagePath)" class="img-responsive" id="UserImage" />
                        <p class="image-desc text-center">Allowed image size 500*500px</p>
                        <div class="upload-photo">
                            <img src="~/Images/cam-icon.png" class="img-responsive" />
                        </div>
                        <div class="remove-photo">
                            <span class="glyphicon glyphicon-remove"></span>
                        </div>
                  </div>
            </div>
            <div class="col-md-8">
                <h3>User Profile</h3>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model=>model.UserId)
                @Html.HiddenFor(model => model.ImagePath)
                <div class="form-group">
                    @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <label class="radio-inline">
                            @Html.RadioButtonFor(model => model.Gender, "Male", new { @name = "gender", htmlAttributes = new { @class = "form-control" } })
                            Male
                        </label>
                        <label class="radio-inline">
                            @Html.RadioButtonFor(model => model.Gender, "Female", new { @name = "gender", htmlAttributes = new { @class = "form-control" } })
                            Female
                        </label>

                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2">Interests</label>
                    <div class="col-md-10">
                        <label class="radio-inline">
                            @Html.CheckBox("cSharp",Model.IsInterestedIncSharp.Value)
                            C#
                        </label>
                        <label class="radio-inline">
                            @Html.CheckBox("Java", Model.IsInterestedInJava.Value)
                            Java
                        </label>
                        <label class="radio-inline">
                            @Html.CheckBox("Ruby", Model.IsInterestedInRuby.Value)
                            Ruby
                        </label>

                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-2">
                        City
                    </label>
                    <div class="col-md-10">
                          @Html.DropDownListFor(model => model.CityId, Model.CityList as SelectList,"-- Select City --", new { @class="form-control" })
                     </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.EditorFor(model => model.DOB, "{0:d}", new { htmlAttributes = new { @class = "form-control datetimepicker" } })*@
                        @Html.TextBoxFor(model => model.DOB, new { @class = "datetimepicker form-control" })
                        @Html.ValidationMessageFor(model => model.DOB, "*", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Submit" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<script src="~/Scripts/jquery-3.5.1.min.js"></script>
<script type="text/javascript">
    $('#UserImage').click(function () {
        uploadClickEvent();
    });

    $('.upload-photo').click(function () {
        uploadClickEvent();
    });

    function uploadClickEvent() {
        $('#BrowseImage').trigger('click');
    }
    // on select photo
    $('#BrowseImage').change(function () {
        var File = this.files;

        if (File && File[0])
        {
            var fileReader = new FileReader();
            fileReader.readAsDataURL(File[0]);

            fileReader.onload = function (x) {

                    var image = new Image;
                    image.src = x.target.result;

                    image.onload = function () {
                        var width = this.width;
                        var height = this.height;
                        var type = File[0].type;

                        if ((width == "500" && height == "500") && (type == "image/png" || type == "image/jpg" || type == "image/jpeg"))
                        {
                            $('#UserImage').attr('src', x.target.result);
                            $('.image-desc').css("color", "black");
                        }
                        else {
                            $('.image-desc').css("color", "red");
                        }
                    }
                }
                
            }        
    });

    $('.remove-photo').click(function () {
        $('#UserImage').attr('src', "/Images/no-image-available.png");
        // change value of image in hidden model  8Html.HiddenFor(model => model.ImagePath)
        $('#ImagePath').val("/Images/no-image-available.png");
    });
</script>

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>